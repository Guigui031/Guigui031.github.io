---
import { type CollectionEntry, getCollection } from "astro:content";
import PostLayout from "../../../layouts/PostLayout.astro";
import { getLangFromUrl } from "../../../i18n/utils";
import { marked } from 'marked';

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects
    .filter(project => project.slug.startsWith('fr/') || !project.slug.includes('/'))
    .map((project) => ({
      params: { slug: project.slug.startsWith('fr/') ? project.slug.replace('fr/', '') : project.slug },
      props: project,
    }));
}

type Props = CollectionEntry<"projects">;

const project = Astro.props;
const { Content } = await project.render();
const lang = getLangFromUrl(Astro.url);

// Get the appropriate content based on language
const displayTitle = lang === 'fr' && project.data.titleFr ? project.data.titleFr : project.data.title;
const displayDescription = lang === 'fr' && project.data.descriptionFr ? project.data.descriptionFr : project.data.description;
const displayBadge = lang === 'fr' && project.data.badgeFr ? project.data.badgeFr : project.data.badge;
const displayContent = lang === 'fr' && project.data.contentFr ? marked(project.data.contentFr) : null;
---

<PostLayout title={displayTitle} description={displayDescription} pubDate={project.data.pubDate} heroImage={project.data.heroImage} badge={displayBadge}>
  {displayContent ? (
    <div set:html={displayContent} />
  ) : (
    <Content />
  )}
</PostLayout>